{
    "-name": "AxisJava2.0",
    "parameter": [
      {
        "-name": "hotdeployment",
        "-locked": "false",
        "#text": "true"
      },
      {
        "-name": "hotupdate",
        "-locked": "false",
        "#text": "true"
      },
      {
        "-name": "enableMTOM",
        "-locked": "false",
        "#text": "false"
      },
      {
        "-name": "enableSwA",
        "-locked": "false",
        "#text": "false"
      },
      {
        "-name": "cacheAttachments",
        "-locked": "false",
        "#text": "false"
      },
      {
        "-name": "attachmentDIR",
        "-locked": "false",
        "#text": "work/mtom"
      },
      {
        "-name": "sizeThreshold",
        "-locked": "false",
        "#text": "4000"
      },
      {
        "-name": "disableREST",
        "-locked": "false",
        "#text": "false"
      },
      {
        "-name": "Sandesha2StorageManager",
        "-locked": "false",
        "#text": "inmemory"
      },
      {
        "-name": "servicePath",
        "-locked": "false",
        "#text": "services"
      },
      {
        "-name": "ServicesDirectory",
        "#text": "axis2services"
      },
      {
        "-name": "ModulesDirectory",
        "#text": "axis2modules"
      },
      {
        "-name": "userAgent",
        "-locked": "true",
        "#text": "WSO2 AM 2.1.0"
      },
      {
        "-name": "server",
        "-locked": "true",
        "#text": "WSO2 AM 2.1.0"
      },
      {
        "-name": "sendStacktraceDetailsWithFaults",
        "-locked": "false",
        "#text": "false"
      },
      {
        "-name": "DrillDownToRootCauseForFaultReason",
        "-locked": "false",
        "#text": "false"
      },
      {
        "-name": "manageTransportSession",
        "-locked": "false",
        "#text": "true"
      },
      {
        "-name": "ConfigContextTimeoutInterval",
        "-locked": "false",
        "#text": "30000"
      },
      {
        "-name": "SynapseConfig.ConfigurationFile",
        "-locked": "false",
        "#text": "repository/deployment/server/synapse-configs"
      },
      {
        "-name": "SynapseConfig.HomeDirectory",
        "-locked": "false",
        "#text": "."
      },
      {
        "-name": "SynapseConfig.ResolveRoot",
        "-locked": "false",
        "#text": "."
      },
      {
        "-name": "SynapseConfig.ServerName",
        "-locked": "false",
        "#text": "localhost"
      }
    ],
    "listener": { "-class": "org.wso2.carbon.core.deployment.DeploymentInterceptor" },
    "messageReceivers": {
      "messageReceiver": [
        {
          "-mep": "http://www.w3.org/ns/wsdl/in-only",
          "-class": "org.apache.axis2.rpc.receivers.RPCInOnlyMessageReceiver"
        },
        {
          "-mep": "http://www.w3.org/ns/wsdl/robust-in-only",
          "-class": "org.apache.axis2.rpc.receivers.RPCInOnlyMessageReceiver"
        },
        {
          "-mep": "http://www.w3.org/ns/wsdl/in-out",
          "-class": "org.apache.axis2.rpc.receivers.RPCMessageReceiver"
        }
      ]
    },
    "messageFormatters": {
      "messageFormatter": [
        {
          "-contentType": "application/x-www-form-urlencoded",
          "-class": "org.apache.axis2.transport.http.XFormURLEncodedFormatter"
        },
        {
          "-contentType": "multipart/form-data",
          "-class": "org.apache.axis2.transport.http.MultipartFormDataFormatter"
        },
        {
          "-contentType": "text/html",
          "-class": "org.apache.axis2.transport.http.ApplicationXMLFormatter"
        },
        {
          "-contentType": "application/xml",
          "-class": "org.apache.axis2.transport.http.ApplicationXMLFormatter"
        },
        {
          "-contentType": "text/xml",
          "-class": "org.apache.axis2.transport.http.SOAPMessageFormatter"
        },
        {
          "-contentType": "application/soap+xml",
          "-class": "org.apache.axis2.transport.http.SOAPMessageFormatter"
        },
        {
          "-contentType": "text/plain",
          "-class": "org.apache.axis2.format.PlainTextFormatter"
        },
        {
          "-contentType": "application/json",
          "-class": "org.apache.synapse.commons.json.JsonFormatter"
        },
        {
          "-contentType": "application/json/badgerfish",
          "-class": "org.apache.axis2.json.JSONBadgerfishMessageFormatter"
        },
        {
          "-contentType": "text/javascript",
          "-class": "org.apache.axis2.json.JSONMessageFormatter"
        }
      ]
    },
    "messageBuilders": {
      "messageBuilder": [
        {
          "-contentType": "application/xml",
          "-class": "org.apache.axis2.builder.ApplicationXMLBuilder"
        },
        {
          "-contentType": "text/html",
          "-class": "org.wso2.carbon.relay.BinaryRelayBuilder"
        },
        {
          "-contentType": "application/x-www-form-urlencoded",
          "-class": "org.apache.synapse.commons.builders.XFormURLEncodedBuilder"
        },
        {
          "-contentType": "multipart/form-data",
          "-class": "org.apache.axis2.builder.MultipartFormDataBuilder"
        },
        {
          "-contentType": "text/plain",
          "-class": "org.apache.axis2.format.PlainTextBuilder"
        },
        {
          "-contentType": "application/json",
          "-class": "org.apache.synapse.commons.json.JsonBuilder"
        },
        {
          "-contentType": "application/json/badgerfish",
          "-class": "org.apache.axis2.json.JSONBadgerfishOMBuilder"
        },
        {
          "-contentType": "text/javascript",
          "-class": "org.apache.axis2.json.JSONBuilder"
        }
      ]
    },
    "transportReceiver": [
      {
        "-name": "http",
        "-class": "org.apache.synapse.transport.passthru.PassThroughHttpListener",
        "parameter": [
          {
            "-name": "port",
            "-locked": "false",
            "#text": "8280"
          },
          {
            "-name": "non-blocking",
            "-locked": "false",
            "#text": "true"
          },
          {
            "-name": "httpGetProcessor",
            "-locked": "false",
            "#text": "org.wso2.carbon.mediation.transport.handlers.PassThroughNHttpGetProcessor"
          }
        ]
      },
      {
        "-name": "https",
        "-class": "org.apache.synapse.transport.passthru.PassThroughHttpSSLListener",
        "parameter": [
          {
            "-name": "port",
            "-locked": "false",
            "#text": "8243"
          },
          {
            "-name": "non-blocking",
            "-locked": "false",
            "#text": "true"
          },
          {
            "-name": "httpGetProcessor",
            "-locked": "false",
            "#text": "org.wso2.carbon.mediation.transport.handlers.PassThroughNHttpGetProcessor"
          },
          {
            "-name": "keystore",
            "-locked": "false",
            "KeyStore": {
              "Location": "repository/resources/security/wso2carbon.jks",
              "Type": "JKS",
              "Password": "wso2carbon",
              "KeyPassword": "wso2carbon"
            }
          },
          {
            "-name": "truststore",
            "-locked": "false",
            "TrustStore": {
              "Location": "repository/resources/security/client-truststore.jks",
              "Type": "JKS",
              "Password": "wso2carbon"
            }
          }
        ]
      },
      {
        "-name": "local",
        "-class": "org.wso2.carbon.core.transports.local.CarbonLocalTransportReceiver"
      }
    ],
    "transportSender": [
      {
        "-name": "http",
        "-class": "org.apache.synapse.transport.passthru.PassThroughHttpSender",
        "parameter": {
          "-name": "non-blocking",
          "-locked": "false",
          "#text": "true"
        }
      },
      {
        "-name": "local",
        "-class": "org.wso2.carbon.core.transports.local.CarbonLocalTransportSender"
      },
      {
        "-name": "https",
        "-class": "org.apache.synapse.transport.passthru.PassThroughHttpSSLSender",
        "parameter": [
          {
            "-name": "non-blocking",
            "-locked": "false",
            "#text": "true"
          },
          {
            "-name": "keystore",
            "-locked": "false",
            "KeyStore": {
              "Location": "repository/resources/security/wso2carbon.jks",
              "Type": "JKS",
              "Password": "wso2carbon",
              "KeyPassword": "wso2carbon"
            }
          },
          {
            "-name": "truststore",
            "-locked": "false",
            "TrustStore": {
              "Location": "repository/resources/security/client-truststore.jks",
              "Type": "JKS",
              "Password": "wso2carbon"
            }
          }
        ]
      },
      {
        "-name": "ws",
        "-class": "org.wso2.carbon.websocket.transport.WebsocketTransportSender",
        "parameter": [
          {
            "-name": "ws.outflow.dispatch.sequence",
            "-locked": "false",
            "#text": "outflowDispatchSeq"
          },
          {
            "-name": "ws.outflow.dispatch.fault.sequence",
            "-locked": "false",
            "#text": "outflowFaultSeq"
          }
        ]
      }
    ],
    "module": { "-ref": "addressing" },
    "clustering": {
      "-class": "org.wso2.carbon.core.clustering.hazelcast.HazelcastClusteringAgent",
      "-enable": "false",
      "parameter": [
        {
          "-name": "AvoidInitiation",
          "#text": "true"
        },
        {
          "-name": "membershipScheme",
          "#text": "multicast"
        },
        {
          "-name": "domain",
          "#text": "wso2.carbon.domain"
        },
        {
          "-name": "mcastPort",
          "#text": "45564"
        },
        {
          "-name": "mcastTTL",
          "#text": "100"
        },
        {
          "-name": "mcastTimeout",
          "#text": "60"
        },
        {
          "-name": "localMemberHost",
          "#text": "127.0.0.1"
        },
        {
          "-name": "localMemberPort",
          "#text": "4000"
        },
        {
          "-name": "properties",
          "property": [
            {
              "-name": "backendServerURL",
              "-value": "https://${hostName}:${httpsPort}/services/"
            },
            {
              "-name": "mgtConsoleURL",
              "-value": "https://${hostName}:${httpsPort}/"
            },
            {
              "-name": "subDomain",
              "-value": "worker"
            }
          ]
        }
      ],
      "members": {
        "member": {
          "hostName": "127.0.0.1",
          "port": "4000"
        }
      },
      "groupManagement": {
        "-enable": "false",
        "applicationDomain": {
          "-name": "wso2.apim.domain",
          "-description": "APIM group",
          "-agent": "org.wso2.carbon.core.clustering.hazelcast.HazelcastGroupManagementAgent",
          "-subDomain": "worker",
          "-port": "2222"
        }
      }
    },
    "phaseOrder": [
      {
        "-type": "InFlow",
        "phase": [
          {
            "-name": "MsgInObservation",
            "handler": {
              "-name": "TraceMessageBuilderDispatchHandler",
              "-class": "org.apache.synapse.transport.passthru.util.TraceMessageBuilderDispatchHandler"
            }
          },
          { "-name": "Validation" },
          {
            "-name": "Transport",
            "handler": [
              {
                "-name": "RequestURIBasedDispatcher",
                "-class": "org.apache.axis2.dispatchers.RequestURIBasedDispatcher",
                "order": { "-phase": "Transport" }
              },
              {
                "-name": "CarbonContextConfigurator",
                "-class": "org.wso2.carbon.mediation.initializer.handler.CarbonContextConfigurator"
              },
              {
                "-name": "SOAPActionBasedDispatcher",
                "-class": "org.apache.axis2.dispatchers.SOAPActionBasedDispatcher",
                "order": { "-phase": "Transport" }
              },
              {
                "-name": "CarbonContentConfigurator",
                "-class": "org.wso2.carbon.mediation.initializer.handler.CarbonContextConfigurator"
              }
            ]
          },
          {
            "-name": "Addressing",
            "handler": {
              "-name": "AddressingBasedDispatcher",
              "-class": "org.apache.axis2.dispatchers.AddressingBasedDispatcher",
              "order": { "-phase": "Addressing" }
            }
          },
          { "-name": "Security" },
          { "-name": "PreDispatch" },
          {
            "-name": "Dispatch",
            "-class": "org.apache.axis2.engine.DispatchPhase",
            "handler": [
              {
                "-name": "RequestURIBasedDispatcher",
                "-class": "org.apache.axis2.dispatchers.RequestURIBasedDispatcher"
              },
              {
                "-name": "SOAPActionBasedDispatcher",
                "-class": "org.apache.axis2.dispatchers.SOAPActionBasedDispatcher"
              },
              {
                "-name": "RequestURIOperationDispatcher",
                "-class": "org.apache.axis2.dispatchers.RequestURIOperationDispatcher"
              },
              {
                "-name": "SOAPMessageBodyBasedDispatcher",
                "-class": "org.apache.axis2.dispatchers.SOAPMessageBodyBasedDispatcher"
              },
              {
                "-name": "HTTPLocationBasedDispatcher",
                "-class": "org.apache.axis2.dispatchers.HTTPLocationBasedDispatcher"
              },
              {
                "-name": "MultitenantDispatcher",
                "-class": "org.wso2.carbon.tenant.dispatcher.MultitenantDispatcher"
              },
              {
                "-name": "SynapseDispatcher",
                "-class": "org.apache.synapse.core.axis2.SynapseDispatcher"
              },
              {
                "-name": "SynapseMustUnderstandHandler",
                "-class": "org.apache.synapse.core.axis2.SynapseMustUnderstandHandler"
              }
            ]
          },
          { "-name": "RMPhase" },
          { "-name": "OpPhase" },
          { "-name": "AuthPhase" },
          { "-name": "MUPhase" },
          { "-name": "OperationInPhase" }
        ]
      },
      {
        "-type": "OutFlow",
        "phase": [
          { "-name": "UEPPhase" },
          { "-name": "RMPhase" },
          { "-name": "MUPhase" },
          { "-name": "OpPhase" },
          { "-name": "OperationOutPhase" },
          { "-name": "PolicyDetermination" },
          {
            "-name": "PTSecurityOutPhase",
            "handler": {
              "-name": "RelaySecuirtyMessageBuilderDispatchandler",
              "-class": "org.apache.synapse.transport.passthru.util.RelaySecuirtyMessageBuilderDispatchandler"
            }
          },
          { "-name": "MessageOut" },
          { "-name": "Security" },
          { "-name": "MsgOutObservation" }
        ]
      },
      {
        "-type": "InFaultFlow",
        "phase": [
          { "-name": "MsgInObservation" },
          { "-name": "Validation" },
          {
            "-name": "Transport",
            "handler": [
              {
                "-name": "RequestURIBasedDispatcher",
                "-class": "org.apache.axis2.dispatchers.RequestURIBasedDispatcher",
                "order": { "-phase": "Transport" }
              },
              {
                "-name": "SOAPActionBasedDispatcher",
                "-class": "org.apache.axis2.dispatchers.SOAPActionBasedDispatcher",
                "order": { "-phase": "Transport" }
              },
              {
                "-name": "CarbonContentConfigurator",
                "-class": "org.wso2.carbon.mediation.initializer.handler.CarbonContextConfigurator"
              }
            ]
          },
          {
            "-name": "Addressing",
            "handler": {
              "-name": "AddressingBasedDispatcher",
              "-class": "org.apache.axis2.dispatchers.AddressingBasedDispatcher",
              "order": { "-phase": "Addressing" }
            }
          },
          { "-name": "Security" },
          { "-name": "PreDispatch" },
          {
            "-name": "Dispatch",
            "-class": "org.apache.axis2.engine.DispatchPhase",
            "handler": [
              {
                "-name": "RequestURIBasedDispatcher",
                "-class": "org.apache.axis2.dispatchers.RequestURIBasedDispatcher"
              },
              {
                "-name": "SOAPActionBasedDispatcher",
                "-class": "org.apache.axis2.dispatchers.SOAPActionBasedDispatcher"
              },
              {
                "-name": "RequestURIOperationDispatcher",
                "-class": "org.apache.axis2.dispatchers.RequestURIOperationDispatcher"
              },
              {
                "-name": "SOAPMessageBodyBasedDispatcher",
                "-class": "org.apache.axis2.dispatchers.SOAPMessageBodyBasedDispatcher"
              },
              {
                "-name": "HTTPLocationBasedDispatcher",
                "-class": "org.apache.axis2.dispatchers.HTTPLocationBasedDispatcher"
              }
            ]
          },
          { "-name": "RMPhase" },
          { "-name": "OpPhase" },
          { "-name": "MUPhase" },
          { "-name": "OperationInFaultPhase" }
        ]
      },
      {
        "-type": "OutFaultFlow",
        "phase": [
          { "-name": "UEPPhase" },
          { "-name": "RMPhase" },
          { "-name": "MUPhase" },
          { "-name": "OperationOutFaultPhase" },
          { "-name": "PolicyDetermination" },
          { "-name": "MessageOut" },
          { "-name": "Security" },
          { "-name": "Transport" },
          { "-name": "MsgOutObservation" }
        ]
      }
    ]
}